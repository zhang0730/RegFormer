task='Pretraining'
data_name='panglao'   #['panglao','cellxgene']
model_name = "mamba"    #['gpt','mamba','bimamba']
run_name='try'    #name of experiment.
do_train=true   #Train or inference
bimamba_type='none'     #type of bimamba: ['v1','v2','none']
graph_sort=false     #using graph topological sorting
distributed=false   #current script is unavailable for distributed training, always set to false plz

MLM=false   #whether to use masked language modeling
MVC=false   #contrastive cell embedding objective
generative_pretraining=false    #using generative token precidtion in pretraining or masked token prediction in pretraining

epochs=1
test_size=0.2
lr=1e-4
seed=42
dropout=0.2
batch_size=10
layer_size=128
nhead=4
nlayers=4
mask_ratio=0.4
pre_norm=false  #normalize previously
freeze=false    #freeze the backbone during finetuning
log_interval=10
save_eval_interval=5
schedule_ratio=0.9      #ratio of epochs for learning rate schedule
amp=true    #Automatic Mixed Precision
token_emb_freeze=false      #freezing token-emb when predicting value
sampling_etype='ori'     #choice of edge type when sampling: ['share_pathway_with','interact_with','co_expression','ori']
layer_mask=false        #using layer mask or not when using graph sort
layer_emb=false         # using layer emb or not when using graph sort

#######dir
data_path='/disk2/cai045/RegFormer/data/'
load_model="none"    #from_scratch: "none"
save_dir='/disk2/cai045/RegFormer/try/output/'  #Directory of checkpoint and result to save
vocab_file='/disk2/cai045/RegFormer/doc/vocab.json'
graph_path="none"
gene_array_file='/disk2/cai045/RegFormer/doc/gene_list.pkl' #Path of vocab, available if load_model is None
lmdb=true       # use lmdb dataset or not
lmdb_path='/disk2/cai045/RegFormer/try/processed_data/' #Path of source lmdb&h5ad data

#######data config
cell_type_column='celltype'
batch_column='batch'
gene_column='none'  #set to "none" or specific column-name based on your requirement
umap_column='TSNE'    #set to "none" or specific column-name based on your requirement
pca_column='none'      #set to "none" or specific column-name based on your requirement
data_is_raw=false
filter_gene_by_counts=false
DSBN=false

input_emb_style='continuous'    #the style of input emb ['continuous','category','scaling']
cell_emb_style='attn'   #method for generating cell emb: ['final','cls','avg-pool','w-pol','attn']
mvc_decoder_style='inner product'   #architecture style of the decoder:['inner product','concat query','sum query']
n_bins=51
append_cls=false    #append <cls> token as first token
per_seq_batch_sample=false      #whether sort the adata by batch_id
include_zero_gene=false     #whether include gene with zero expression value
input_style='binned'       #input representation: ['binned','normed_raw','log1p']
output_style='binned'       #output representation: ['binned','normed_raw','log1p']
max_seq_len=3000


